------------------------------------------------------------------
Сортировка слиянием через корутины.
Язык: С.
Время: 2 недели.
------------------------------------------------------------------

На диске лежат файлы, в них числа в строковом виде в произвольном
порядке разделенные пробелом. Каждый файл полностью помещается в
память, но все сразу - нет. Нужно отсортировать каждый файл и
затем слить их в один большой. То есть выполнить сортировку
слиянием.

Сортировка одного отдельно взятого файла должна выполняться в
С корутине, в собственном контексте. Алгоритм сортировки файла -
любой.

Корутины должны быть реализованы через switchcontext() или
setjmp().

У корутин должен быть планировщик. Есть несколько вариантов.

  - 15 баллов: после каждой выполненной строки делается
    переключение.
  - 20 баллов: каждой из N корутин выдается по T / N миллисекунд,
    где T - target latency, подаваемое на вход. После каждой
    строки проверять, что у процесса кончилось время. Если да, то
    переключать.
  - 25 баллов: тоже, что на 15, но чтение с диска должно быть
    асинхронным. См aio_read.

Вход: имена файлов, которые надо отсортировать. Для варианта на
20 баллов добавляется target latency первым аргументом.

Выход: сколько программа работала суммарно и сколько каждая
корутина.
